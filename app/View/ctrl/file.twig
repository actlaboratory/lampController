{% set page_title = "ファイル一覧" %}
{% set page_description = "LAMP Controllerのファイル一覧ページです。" %}

{#レイアウト継承#}
{% extends "layout/layout.twig" %}

{# スタイルシートの追加 #}
{% block header_scripts_add %}
{% endblock %}

{# ページ本文 #}
{% block page_content %}

    <div class="container-fluid my-2">
        {% if session.guestId==null %}
            <span class="text-right">ようこそ、{{ userDisplayName }}さん。</span>
        {% else %}
            <span class="text-right"><p>ようこそ、{{ userDisplayName }}のゲストさん。</p></span>
        {% endif %}

        <div class="row">
            {# ファイル表示エリア　#}
            <div class="col-lg-9 col-md-7 col-sm-6 col-12 order-sm-2 mx-auto bg-light">
                <h2 class="h2 text-center text-light bg-info my-auto">ファイル</h2>
                {% if filePathR==NULL %}
                    <div class="bg-warning"><p>TOP</p></div>
                {% else %}
                    <div class="bg-warning px-2"><p><a href="{{ get_base_path() }}/ctrl/file">TOP</a>
                    {% set pR = "" %}
                    {% for p in filePathR %}
                        {% if p!="" %}
                            {% if loop.last %}
                                / {{ p }}
                            {% elseif loop.first %}
                                {% set pR = pR ~ p|url_encode() %}
                                / <a href="{{ get_base_path() }}/ctrl/file?f={{ pR }}">{{ p }}</a>
                            {% else %}
                                {% set pR = pR ~ "/" ~ p|url_encode() %}
                                / <a href="{{ get_base_path() }}/ctrl/file?f={{ pR }}">{{ p }}</a>
                            {% endif %}
                        {% endif %}
                    {% endfor %}
                    </p></div>
                    <div class="text-right"><button class="btn btn-dark text-white mt-0 mb-4 py-0" onclick="operation('playlist/{{ filePath }}');">ここから先をプレイリストに追加</button></div>
                {% endif %}
                <div class="container-fluid" id="fileList">
                </div>
            </div>
            
            {# 操作パネルエリア　#}
            <div class="col-lg-3 col-md-5 col-sm-6 col-12 order-sm-1 mx-auto">
                <div class="container fluid">
                    <div class="row bg-info justify-content-center">
                        <h2 id="softwareStatus" class="h2 text-light my-auto">読み込み中</h2>
                    </div>
                    <div class="row justify-content-center my-1">
                        <h3 class="h4 mb-1">CONTROLLER</h3>
                    </div>
                    <div class="row justify-content-center mt-1 mb-2">
                        <button type="button" id="playButton" class="col-12 btn btn-dark my-2 mx-auto" onclick="operation('play');">再生 / 一時停止</button>
                    </div>
                    <div class="row my-2 justify-content-center">
                        <div class="col-4 px-1 text-center"><button type="button" id="previousButton" class="btn btn-dark mx-auto px-3" onclick="operation('previous');">前へ</button></div>
                        <div class="col-4 px-1 text-center"><button type="button" id="stopButton" class="btn btn-dark mx-auto px-3" onclick="operation('stop');">停止</button></div>
                        <div class="col-4 px-1 text-center"><button type="button" id="nextButton" class="btn btn-dark mx-auto px-3" onclick="operation('next');">次へ</button></div>
                    </div>
                    <div class="row bg-primary justify-content-center mt-3 mb-" aria-hidden="true">
                        <span class="text-light py-1">音量</span>
                    </div>
                    <div class="row bg-primary mt-0 mb-2 justify-content-center">
                        <button type="button" id="volumeDownButton" class="col-5 btn btn-dark mx-2" aria-label="音量を下げる" onclick="operation('volumeDown');">DOWN</button>
                        <button type="button" id="volumeUpButton" class="col-5 btn btn-dark mx-2" aria-label="音量を上げる" onclick="operation('volumeUp');">UP</button>
                    </div>
                    <div class="row justify-content-center my-2">
                        <a role="button" class="col-11 btn btn-dark my-2 mx-1" href="{{ get_base_path() }}/ctrl">コントローラへ</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

{% autoescape 'js' %}
    <script>
        var basePath = "{{ get_base_path() }}";
        var sessionId = "{{ session.id }}";
        {% if session.defaultLamp matches '/^\\d+$/' %}
            var softwareId = {{ session.defaultLamp }};
        {% else %}
            var softwareId = null;
        {% endif %}

        {# エレメントを取得 #}
        var softwareStatus = document.getElementById("softwareStatus")
        
        {# ビューのリアルタイム更新 #}
        function refreshView(){
            {# JSONを送ってJSONをもらう #}
            var reqJson = JSON.stringify({
                "sessionId": "{{ session.id }}",
                "softwareId": softwareId
            });
            var xhr = new XMLHttpRequest;
            xhr.onload = function(){
                var res = xhr.responseText;
                if (res.length>0){
                    var jsonData = JSON.parse(res);
                    if (jsonData.status == "playing"){
                        setText(softwareStatus, "再生中");
                    } else if (jsonData.status == "paused"){
                        setText(softwareStatus, "一時停止中");
                    } else if (jsonData.status == "stopped"){
                        setText(softwareStatus, "停止中");
                    } else{
                        setText(softwareStatus, "未接続");
                    }
                }
            };
            xhr.open('post', "{{ get_base_path() }}/ctrl/getstatus", true);    //(1)
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send(reqJson);
        };

        {# ファイル一覧構成 #}
        function getFileList(){
            {# エレメントを取得 #}
            var fileList = document.getElementById("fileList")
            
            {# JSONを送ってJSONをもらう #}
            var reqJson = JSON.stringify({
                "sessionId": "{{ session.id }}",
                "filePath": "{{ filePath }}"
            });
            var xhr = new XMLHttpRequest;
            xhr.onload = function(){
                var res = xhr.responseText;
                if (res.length>0){
                    var jsonData = JSON.parse(res);
                    
                    // 書き込み
                    if (typeof jsonData["directory"] !== 'undefined') {
                        for (var dir in jsonData["directory"]){
                            if (location.search === ""){
                                addLinkText(fileList, "{{ get_base_path() }}" + "/ctrl/file?f=" + encodeURIComponent(jsonData["directory"][dir]), jsonData["directory"][dir]);
                            } else{
                                addLinkText(fileList, "{{ get_base_path() }}" + "/ctrl/file" + location.search + "/" + encodeURIComponent(jsonData["directory"][dir]), jsonData["directory"][dir]);
                            }
                        }
                    }
                    if (typeof jsonData["file"] !== 'undefined') {
                        for (var f in jsonData["file"]){
                            var path = decodeURI(location.search.slice(3)) + "/" + jsonData["file"][f];
                            addLinkText(fileList, 'javascript:operation("file/' + path + '");', jsonData["file"][f]);
                        }
                    }
                }
            };
            xhr.open('post', "{{ get_base_path() }}/ctrl/getfilelist", true);    //(1)
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send(reqJson);
        };

        function addLinkText(parent, href, text){
            var pElement = document.createElement("p");
            var newElement = document.createElement("a");
            newElement.textContent = text;
            newElement.href = href;
            pElement.appendChild(newElement);
            parent.appendChild(pElement);
        }
        
        function setText(element, text){
            if (element.innerText != text){
                element.innerText = text;
            }
        }

        {# 読み込み時に実行 #}
        window.onload = function(){
            setInterval(refreshView, 1000);
            getFileList();
        };
    </script>

    <script src="../scripts/operation.js"></script>
{% endautoescape %}


{% endblock %}

{# フッダ以降に追加する内容 #}
{% block footer_scripts_add %}
{% endblock %}

